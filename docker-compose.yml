services:
    app:
        build:
            args:
                user: courselandia.ru
                uid: 1000
            context: docker/app
            dockerfile: Dockerfile
        image: api-courselandia-ru
        container_name: api-courselandia-ru-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - network
        depends_on:
            - db
            - db-test
            - mongo-test
            - nginx
            - mailhog
            - redis
            - mongo
            - smtp
            - rabbitmq
            - npm

    npm:
        image: node:14
        container_name: api-courselandia-ru-npm
        working_dir: /var/www
        entrypoint:
            - npm
        volumes:
            - ./:/var/www

    queue:
        build:
            args:
                user: courselandia.ru
                uid: 1000
            context: docker/app
            dockerfile: Dockerfile
        image: api-courselandia-queue
        container_name: api-courselandia-ru-queue
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        command: "php artisan queue:work --memory=2048 --timeout=0 --queue=default"
        networks:
            - network
        depends_on:
            - app

    db:
        image: mysql:8.0.30
        container_name: api-courselandia-ru-db
        restart: unless-stopped
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_USER=${DB_USERNAME}
            - SERVICE_TAGS=product
            - SERVICE_NAME=mysql
        ports:
            - ${DOCKER_DB_PORT}:${DB_PORT}
        volumes:
            - db-data:/var/lib/mysql/
            - ./docker/db/mysql.cnf:/etc/mysql/my.cnf
        command:
            --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
            --innodb_ft_min_token_size=2
            --ft_min_word_len=2
        networks:
            - network

    db-test:
        image: mysql:8.0.30
        container_name: api-courselandia-ru-db-test
        restart: unless-stopped
        tmpfs:
            - /var/lib/store/mysql
        environment:
            - MYSQL_DATABASE=${DB_TEST_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_TEST_PASSWORD}
            - MYSQL_PASSWORD=${DB_TEST_PASSWORD}
            - MYSQL_USER=${DB_TEST_USERNAME}
            - SERVICE_TAGS=test
            - SERVICE_NAME=store
        ports:
            - ${DOCKER_DB_TEST_PORT}:${DB_TEST_PORT}
        command:
            --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION" --max_connections=500
        networks:
            - network

    nginx:
        image: nginx:alpine
        container_name: api-courselandia-ru-nginx
        restart: unless-stopped
        ports:
            - ${DOCKER_NGINX_PORT}:15000
        volumes:
            - ./:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./storage/logs/nginx:/var/log/nginx/
        networks:
            - network
        depends_on:
            - db
            - db-test
            - mongo-test
            - mailhog
            - redis
            - mongo
            - smtp
            - rabbitmq

    mailhog:
        image: mailhog/mailhog:latest
        container_name: api-courselandia-ru-mailhog
        restart: unless-stopped
        ports:
            - ${DOCKER_MAILHOG_SMPT_PORT}:1025
            - ${DOCKER_MAILHOG_DASHBOARD_PORT}:8025
        networks:
            - network

    redis:
        image: redis:7.2.5
        container_name: api-courselandia-ru-redis
        restart: unless-stopped
        ports:
            - ${DOCKER_REDIS_PORT}:6379
        networks:
            - network

    mongo:
        image: mongo:5.0
        container_name: api-courselandia-ru-mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${DB_MONGODB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGODB_PASSWORD}
        restart: unless-stopped
        ports:
            - ${DOCKER_MONGO_PORT}:${DB_MONGODB_PORT}
        volumes:
            - mongo-data:/data/db
        networks:
            - network

    mongo-test:
        image: mongo:5.0
        container_name: api-courselandia-ru-mongo-test
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${DB_TEST_MONGODB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_TEST_MONGODB_PASSWORD}
        restart: unless-stopped
        ports:
            - ${DOCKER_MONGO_TEST_PORT}:${DB_TEST_MONGODB_PORT}
        tmpfs:
            - /var/lib/store/mongo
        networks:
            - network

    smtp:
        image: bambucha/exim-relay
        container_name: api-courselandia-ru-smtp
        restart: unless-stopped
        user: exim
        ports:
            - ${DOCKER_SMTP_PORT}:25
        volumes:
            - smtp-dkim:/dkim
        hostname: ${DOCKER_SMTP_HOSTNAME}
        environment:
            - RELAY_FROM_HOSTS=${DOCKER_SMTP_RELAY_FROM_HOSTS}
            - DKIM_KEY_SIZE=1024
            - DKIM_SELECTOR=${DOCKER_SMTP_DKIM_SELECTOR}
            - DKIM_SIGN_HEADERS=Date:From:To:Subject:Message-ID
            - DKIM_DOMAINS=${DOCKER_SMTP_DKIM_DOMAINS}
        networks:
            - network

    rabbitmq:
        image: rabbitmq:3.6-management-alpine
        container_name: api-courselandia-ru-rabbitmq
        restart: unless-stopped
        ports:
            - "5673:5672"
            - ${DOCKER_RABBITMQ_DASHBOARD_PORT}:15672
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
        volumes:
            - rabbitmq:/var/lib/rabbitmq/
        networks:
            - network

    browser:
        image: selenium/standalone-firefox:latest
        container_name: api-courselandia-ru-browser
        restart: unless-stopped
        ports:
            - "${DOCKER_BROWSER_PORT}:4444"
        privileged: true
        shm_size: 2g
        environment:
            - SE_NODE_MAX_INSTANCES=4
            - SE_NODE_MAX_SESSIONS=10
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    db-data:
        driver: local
    mongo-data:
        driver: local
    smtp-dkim:
        driver: local
    rabbitmq:
        driver: local

